{
  "pipelineSpec": {
    "components": {
      "comp-dummy-data-ingestion": {
        "executorLabel": "exec-dummy-data-ingestion",
        "inputDefinitions": {
          "parameters": {
            "base_data_path": {
              "type": "STRING"
            },
            "timestamp": {
              "type": "INT"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "ingested_dataset_path": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-dummy-data-preprocessing": {
        "executorLabel": "exec-dummy-data-preprocessing",
        "inputDefinitions": {
          "parameters": {
            "base_data_path": {
              "type": "STRING"
            },
            "ingested_dataset_path": {
              "type": "STRING"
            },
            "timestamp": {
              "type": "INT"
            }
          }
        },
        "outputDefinitions": {
          "parameters": {
            "preprocessed_dataset_path": {
              "type": "STRING"
            }
          }
        }
      },
      "comp-generate-timestamp": {
        "executorLabel": "exec-generate-timestamp",
        "outputDefinitions": {
          "parameters": {
            "Output": {
              "type": "INT"
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-dummy-data-ingestion": {
          "container": {
            "command": [
              "python3",
              "ingest.py",
              "--base-data-path",
              "{{$.inputs.parameters['base_data_path']}}",
              "--timestamp",
              "{{$.inputs.parameters['timestamp']}}",
              "--ingested-dataset-path",
              "{{$.outputs.parameters['ingested_dataset_path'].output_file}}"
            ],
            "image": "us-central1-docker.pkg.dev/apache-beam-testing/kfp-components-preprocessing/ingestion:latest"
          }
        },
        "exec-dummy-data-preprocessing": {
          "container": {
            "command": [
              "python3",
              "preprocess.py",
              "--ingested-dataset-path",
              "{{$.inputs.parameters['ingested_dataset_path']}}",
              "--timestamp",
              "{{$.inputs.parameters['timestamp']}}",
              "--base-data-path",
              "{{$.inputs.parameters['base_data_path']}}",
              "--preprocessed-dataset-path",
              "{{$.outputs.parameters['preprocessed_dataset_path'].output_file}}"
            ],
            "image": "us-central1-docker.pkg.dev/apache-beam-testing/kfp-components-preprocessing/preprocessing:latest"
          }
        },
        "exec-generate-timestamp": {
          "container": {
            "args": [
              "----output-paths",
              "{{$.outputs.parameters['Output'].output_file}}"
            ],
            "command": [
              "sh",
              "-ec",
              "program_path=$(mktemp)\nprintf \"%s\" \"$0\" > \"$program_path\"\npython3 -u \"$program_path\" \"$@\"\n",
              "def generate_timestamp():\n    import time\n    return int(time.time())\n\ndef _serialize_int(int_value: int) -> str:\n    if isinstance(int_value, str):\n        return int_value\n    if not isinstance(int_value, int):\n        raise TypeError('Value \"{}\" has type \"{}\" instead of int.'.format(\n            str(int_value), str(type(int_value))))\n    return str(int_value)\n\nimport argparse\n_parser = argparse.ArgumentParser(prog='Generate timestamp', description='')\n_parser.add_argument(\"----output-paths\", dest=\"_output_paths\", type=str, nargs=1)\n_parsed_args = vars(_parser.parse_args())\n_output_files = _parsed_args.pop(\"_output_paths\", [])\n\n_outputs = generate_timestamp(**_parsed_args)\n\n_outputs = [_outputs]\n\n_output_serializers = [\n    _serialize_int,\n\n]\n\nimport os\nfor idx, output_file in enumerate(_output_files):\n    try:\n        os.makedirs(os.path.dirname(output_file))\n    except OSError:\n        pass\n    with open(output_file, 'w') as f:\n        f.write(_output_serializers[idx](_outputs[idx]))\n"
            ],
            "image": "python:3.8-slim"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "beam-preprocessing-kfp-example"
    },
    "root": {
      "dag": {
        "tasks": {
          "dummy-data-ingestion": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-dummy-data-ingestion"
            },
            "dependentTasks": [
              "generate-timestamp"
            ],
            "inputs": {
              "parameters": {
                "base_data_path": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "gs://apache-beam-testing-ml-examples/kfp-example"
                    }
                  }
                },
                "timestamp": {
                  "taskOutputParameter": {
                    "outputParameterKey": "Output",
                    "producerTask": "generate-timestamp"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "dummy-data-ingestion"
            }
          },
          "dummy-data-preprocessing": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-dummy-data-preprocessing"
            },
            "dependentTasks": [
              "dummy-data-ingestion",
              "generate-timestamp"
            ],
            "inputs": {
              "parameters": {
                "base_data_path": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "gs://apache-beam-testing-ml-examples/kfp-example"
                    }
                  }
                },
                "ingested_dataset_path": {
                  "taskOutputParameter": {
                    "outputParameterKey": "ingested_dataset_path",
                    "producerTask": "dummy-data-ingestion"
                  }
                },
                "timestamp": {
                  "taskOutputParameter": {
                    "outputParameterKey": "Output",
                    "producerTask": "generate-timestamp"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "dummy-data-preprocessing"
            }
          },
          "generate-timestamp": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-generate-timestamp"
            },
            "taskInfo": {
              "name": "generate-timestamp"
            }
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.13"
  },
  "runtimeConfig": {
    "gcsOutputDirectory": "gs://apache-beam-testing-ml-examples/pipelines"
  }
}